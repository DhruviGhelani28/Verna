{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Music/DH90/Verna-Django-Backend-main/verna-house-app/src/Componants/Login/Registration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport classes from '../Login.module.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Select from '@mui/material/Select';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport MenuItem from '@mui/material/MenuItem';\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { formatMuiErrorMessage } from '@mui/utils';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root1: {\n    color: '#121212',\n    '&:hover': {\n      color: '#EC255A'\n    }\n  },\n  root2: {\n    '&:onClick': {\n      color: '#121212'\n    },\n    color: '#EC255A',\n    '&:hover': {\n      color: '#121212'\n    },\n    '&:active': {\n      color: '#EC255A'\n    }\n  },\n  root3: {\n    color: '#EC255A',\n    '&:hover': {\n      color: '#121212'\n    }\n  },\n  root4: {\n    background: 'linear-gradient(45deg, #FFE3E3 25%, #F3C5C5 80%)',\n    color: 'action.home'\n  }\n});\nconst Rolls = [{\n  value: 'Supplier',\n  label: 'Supplier'\n}, {\n  value: 'Customer',\n  label: 'Customer'\n}, {\n  value: 'Agency',\n  label: 'Agency'\n}, {\n  value: 'Worker',\n  label: 'Worker'\n}];\n\nconst Registration = props => {\n  _s();\n\n  var _errors$fullname, _errors$email, _errors$username, _errors$newpassword, _errors$confirmPasswo;\n\n  const navigate = useNavigate();\n  const validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n  });\n  const {\n    register,\n    control,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(JSON.stringify(data, null, 2));\n  };\n\n  const goBackHandler = () => {\n    navigate(\"/Login\");\n  };\n\n  const classes1 = useStyles();\n  const [values, setValues] = React.useState({\n    name: '',\n    email: '',\n    username: '',\n    password: '',\n    confirm: '',\n    // weight: '',\n    // weightRange: '',\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const onRegisterHandler = e => {\n    e.preventDefault(); // dispatch({LoggedInReducer})\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const [roll, setRoll] = React.useState(null);\n\n  const rollChangeHandler = event => {\n    setRoll(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    align: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        maxWidth: 500,\n        maxHeight: 8000,\n        background: 'linear-gradient(45deg, #F3C5C5 30%, #FFE3E3 50%,#F3C5C5 30%,#FFE3E3 50%)',\n        borderColor: '#EC255A',\n        borderWidth: 1,\n        borderRadius: 5,\n        color: 'action.home',\n        paddingTop: 1,\n        m: 1,\n        marginTop: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            marginLeft: 1\n          },\n          onClick: goBackHandler,\n          className: classes1.root1,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            className: classes1.root1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          fontSize: \"26px\",\n          className: classes.registration,\n          children: \"Register Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            marginTop: 5,\n            marginLeft: 0,\n            '& .MuiTextField-root': {\n              m: 1,\n              width: '40ch'\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          onSubmit: onRegisterHandler,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              multiline: true,\n              size: \"medium\",\n              id: \"fullname\",\n              label: \"Enter Your Name\",\n              placeholder: \"xyz abc\",\n              ...register('fullname'),\n              error: errors.fullname ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              multiline: true,\n              size: \"medium\",\n              id: \"email\",\n              label: \"Enter Your Email Address\",\n              placeholder: \"xyz@abc.com\",\n              ...register('email'),\n              error: errors.email ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              multiline: true,\n              size: \"medium\",\n              id: \"username\",\n              label: \"Enter Your UserName\",\n              placeholder: \"xyz_abc123\",\n              ...register('username'),\n              error: errors.username ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              sx: {\n                m: 1,\n                width: '40ch'\n              },\n              variant: \"outlined\",\n              autoComplete: \"current-password\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"Enter New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Enter New Password\",\n                placeholder: \"*******\",\n                id: \"newpassword\",\n                type: values.showPassword ? 'text' : 'password',\n                value: values.password,\n                onChange: handleChange('password'),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    className: classes1.root1,\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {\n                      className: classes1.root1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 72\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {\n                      className: classes1.root1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 119\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 41\n                }, this),\n                ...register('newpassword'),\n                error: errors.newpassword ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"inherit\",\n                color: \"textSecondary\",\n                children: (_errors$newpassword = errors.newpassword) === null || _errors$newpassword === void 0 ? void 0 : _errors$newpassword.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Enter Confirm Password\",\n              placeholder: \"*******\",\n              id: \"confirmpassword\",\n              type: values.showPassword ? 'text' : 'password',\n              value: values.password,\n              onChange: handleChange('password'),\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    className: classes1.root1,\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {\n                      className: classes1.root1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 72\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {\n                      className: classes1.root1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 119\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 41\n                }, this)\n              },\n              ...register('confirmPassword'),\n              error: errors.confirmPassword ? true : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"inherit\",\n              color: \"textSecondary\",\n              children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              sx: {\n                m: 1,\n                width: '40ch'\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"roll-id\",\n                children: \"Roll\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                sx: {\n                  textAlign: 'left'\n                },\n                labelId: \"demo-simple-select-label\",\n                id: \"select-roll\",\n                label: \"Roll\",\n                value: roll,\n                onChange: rollChangeHandler,\n                children: Rolls.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: \"Please select your roll in system.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes1.root4,\n                variant: \"contained\",\n                onClick: handleSubmit(onSubmit),\n                sx: {\n                  marginTop: 0.5,\n                  marginRight: -34,\n                  color: 'black'\n                },\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.register,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  marginTop: 0.5,\n                  marginLeft: -13.5,\n                  color: 'black'\n                },\n                children: [\"Do You Have An Account?\", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/Login\",\n                  className: classes1.root3,\n                  children: \" Sign In  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  marginTop: 0.5,\n                  marginLeft: -27,\n                  color: 'black'\n                },\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/Registration\",\n                  className: classes1.root3,\n                  children: \"Forgot Password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Registration, \"y8Z7fEY7c+3+Ug6TPo6vYQYFeAA=\", false, function () {\n  return [useNavigate, useForm, useStyles];\n});\n\n_c = Registration;\nexport default Registration;\n/*\n\n<FormControl required sx={{ m: 1, width: '40ch' }} variant=\"outlined\" >\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Enter Confirm Password</InputLabel>\n                                <OutlinedInput\n                                    label=\"Enter Confirm Password\"\n                                    placeholder='*******'\n                                    id=\"confirm-password\"\n                                    type={values.showPassword ? 'text' : 'password'}\n                                    value={values.password}\n                                    onChange={handleChange('password')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/lcom/Music/DH90/Verna-Django-Backend-main/verna-house-app/src/Componants/Login/Registration.js"],"names":["React","Box","Card","CardActions","CardContent","useNavigate","Link","IconButton","ChevronLeftIcon","classes","Button","TextField","Typography","Container","Select","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","MenuItem","makeStyles","ThemeProvider","formatMuiErrorMessage","useForm","Controller","yupResolver","Yup","useStyles","root1","color","root2","root3","root4","background","Rolls","value","label","Registration","props","navigate","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","control","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","JSON","stringify","goBackHandler","classes1","values","setValues","useState","name","confirm","showPassword","handleChange","prop","event","target","handleClickShowPassword","onRegisterHandler","e","preventDefault","handleMouseDownPassword","roll","setRoll","rollChangeHandler","maxWidth","maxHeight","borderColor","borderWidth","borderRadius","paddingTop","m","marginTop","marginLeft","registration","width","message","newpassword","endAdornment","textAlign","map","option","button","marginRight"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useNavigate, Link } from \"react-router-dom\";\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport classes from '../Login.module.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport Select from '@mui/material/Select';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport MenuItem from '@mui/material/MenuItem';\nimport { makeStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { formatMuiErrorMessage } from '@mui/utils';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\n\n\n\n\n\nconst useStyles = makeStyles({\n    root1: {\n        color: '#121212',\n        '&:hover': {\n            color: '#EC255A',\n        }\n    },\n    root2: {\n        '&:onClick': {\n            color: '#121212',\n        },\n        color: '#EC255A',\n        '&:hover': {\n            color: '#121212',\n        },\n        '&:active': {\n            color: '#EC255A',\n        }\n    },\n    root3: {\n        color: '#EC255A',\n        '&:hover': {\n            color: '#121212',\n        }\n    },\n    root4:\n    {\n        background: 'linear-gradient(45deg, #FFE3E3 25%, #F3C5C5 80%)',\n        color: 'action.home',\n    },\n});\n\nconst Rolls = [\n    {\n        value: 'Supplier',\n        label: 'Supplier',\n    },\n    {\n        value: 'Customer',\n        label: 'Customer',\n    },\n    {\n        value: 'Agency',\n        label: 'Agency',\n    },\n    {\n        value: 'Worker',\n        label: 'Worker',\n    },\n];\n\nconst Registration = props => {\n    const navigate = useNavigate()\n    const validationSchema = Yup.object().shape({\n        fullname: Yup.string().required('Fullname is required'),\n        username: Yup.string()\n            .required('Username is required')\n            .min(6, 'Username must be at least 6 characters')\n            .max(20, 'Username must not exceed 20 characters'),\n        email: Yup.string()\n            .required('Email is required')\n            .email('Email is invalid'),\n        password: Yup.string()\n            .required('Password is required')\n            .min(6, 'Password must be at least 6 characters')\n            .max(40, 'Password must not exceed 40 characters'),\n        confirmPassword: Yup.string()\n            .required('Confirm Password is required')\n            .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n        acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n    const { register, control, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(validationSchema)\n    });\n\n    const onSubmit = data => {\n        console.log(JSON.stringify(data, null, 2));\n    };\n    const goBackHandler = () => {\n        navigate(\"/Login\")\n    }\n\n    const classes1 = useStyles();\n    const [values, setValues] = React.useState({\n        name: '',\n        email: '',\n        username: '',\n        password: '',\n        confirm: '',\n        // weight: '',\n        // weightRange: '',\n        showPassword: false,\n    });\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({\n            ...values,\n            showPassword: !values.showPassword,\n        });\n    };\n\n    const onRegisterHandler = (e) => {\n        e.preventDefault()\n        // dispatch({LoggedInReducer})\n    }\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const [roll, setRoll] = React.useState(null);\n\n    const rollChangeHandler = (event) => {\n        setRoll(event.target.value);\n    };\n\n\n    return (\n        <Container align=\"center\">\n            <Card variant=\"outlined\"\n                sx={{\n                    maxWidth: 500, maxHeight: 8000, background: 'linear-gradient(45deg, #F3C5C5 30%, #FFE3E3 50%,#F3C5C5 30%,#FFE3E3 50%)',\n                    borderColor: '#EC255A',\n                    borderWidth: 1,\n                    borderRadius: 5,\n                    color: 'action.home',\n                    paddingTop: 1,\n                    m: 1,\n                    marginTop: 3\n                }}\n                >\n                <CardActions>\n                    <IconButton sx={{ marginLeft: 1, }} onClick={goBackHandler} className={classes1.root1}>\n                        <ChevronLeftIcon className={classes1.root1}/>\n                    </IconButton>\n                </CardActions>\n                <CardContent>\n                    <Typography variant=\"h4\" component='div' fontSize='26px' className={classes.registration}>Register Here</Typography>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            marginTop: 5,\n                            marginLeft: 0,\n                            '& .MuiTextField-root': { m: 1, width: '40ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                        onSubmit={onRegisterHandler}\n                    >\n                        <div>\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"fullname\"\n                                label=\"Enter Your Name\"\n                                placeholder=\"xyz abc\"\n                                {...register('fullname')}\n                                error={errors.fullname ? true: false}\n                            />\n                            <Typography variant=\"inherit\" color=\"textSecondary\">\n                                {errors.fullname?.message}\n                            </Typography>\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"email\"\n                                label=\"Enter Your Email Address\"\n                                placeholder=\"xyz@abc.com\"\n                                {...register('email')}\n                                error={errors.email ? true : false}\n                            />\n                            <Typography variant=\"inherit\" color=\"textSecondary\">\n                                {errors.email?.message}\n                            </Typography>\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"username\"\n                                label=\"Enter Your UserName\"\n                                placeholder=\"xyz_abc123\"\n                                {...register('username')}\n                                error ={errors.username?true:false}\n                            />\n                            <Typography variant=\"inherit\" color=\"textSecondary\">\n                                {errors.username?.message}\n                            </Typography>\n                            <FormControl required sx={{ m: 1, width: '40ch' }} variant=\"outlined\" autoComplete=\"current-password\">\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Enter New Password</InputLabel>\n                                <OutlinedInput\n                                    label=\"Enter New Password\"\n                                    placeholder='*******'\n                                    id=\"newpassword\"\n                                    type={values.showPassword ? 'text' : 'password'}\n                                    value={values.password}\n                                    onChange={handleChange('password')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                className={classes1.root1}\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <VisibilityOff className={classes1.root1} /> : <Visibility className={classes1.root1}/>}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                    {...register('newpassword')}\n                                    error={errors.newpassword ? true : false}\n                                />\n                                <Typography variant=\"inherit\" color=\"textSecondary\">\n                                    {errors.newpassword?.message}\n                                </Typography>\n                            </FormControl>\n                            <TextField\n                                required\n                                label=\"Enter Confirm Password\"\n                                placeholder='*******'\n                                id=\"confirmpassword\"\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                className={classes1.root1}\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <VisibilityOff className={classes1.root1} /> : <Visibility className={classes1.root1}/>}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    )\n                                }}\n                                {...register('confirmPassword')}\n                                error={errors.confirmPassword ? true : false}\n                            />\n                            <Typography variant=\"inherit\" color=\"textSecondary\">\n                                {errors.confirmPassword?.message}\n                            </Typography>\n                            <FormControl required sx={{ m: 1, width: '40ch' }} >\n                                <InputLabel id=\"roll-id\">Roll</InputLabel>\n                                <Select\n                                    sx={{ textAlign: 'left'}}\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"select-roll\"\n                                    label=\"Roll\"\n                                    value={roll}\n                                    onChange={rollChangeHandler}\n                                >\n                                    {Rolls.map((option) => (\n                                        <MenuItem key={option.value} value={option.value}>\n                                            {option.label}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                <FormHelperText>Please select your roll in system.</FormHelperText>\n                            </FormControl>\n\n                            <div className={classes.button}>\n                                <Button\n                                    className={classes1.root4}\n                                    variant=\"contained\"\n                                    onClick={handleSubmit(onSubmit)}\n                                    sx={{\n                                        marginTop: 0.5,\n                                        marginRight: -34,\n                                        color: 'black',\n                                    }}>\n                                    Sign Up</Button>\n                            </div>\n                            <div className={classes.register}>\n                                <Typography variant=\"body1\" sx={{ marginTop: 0.5, marginLeft: -13.5, color:'black' }}>\n                                    Do You Have An Account?\n                                    <Link to={\"/Login\"} className={classes1.root3}> Sign In  </Link>\n                                </Typography>\n                                <Typography variant=\"body1\" sx={{ marginTop: 0.5, marginLeft: -27, color: 'black'    }}>\n                                    <Link to={\"/Registration\"} className={classes1.root3}>Forgot Password?\n                                    </Link>\n                                </Typography>\n                            </div>\n                        </div>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n\n};\nexport default Registration;\n\n/*\n\n<FormControl required sx={{ m: 1, width: '40ch' }} variant=\"outlined\" >\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Enter Confirm Password</InputLabel>\n                                <OutlinedInput\n                                    label=\"Enter Confirm Password\"\n                                    placeholder='*******'\n                                    id=\"confirm-password\"\n                                    type={values.showPassword ? 'text' : 'password'}\n                                    value={values.password}\n                                    onChange={handleChange('password')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                />\n                            </FormControl>\n*/"]},"metadata":{},"sourceType":"module"}