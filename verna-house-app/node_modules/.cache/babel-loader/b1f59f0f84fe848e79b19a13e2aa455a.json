{"ast":null,"code":"import _objectSpread from\"/home/lcom/Music/DH90/Verna-Django-Backend-main/verna-house-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/lcom/Music/DH90/Verna-Django-Backend-main/verna-house-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import Box from'@mui/material/Box';import Card from'@mui/material/Card';import CardActions from'@mui/material/CardActions';import CardContent from'@mui/material/CardContent';import{useNavigate}from\"react-router-dom\";import IconButton from'@mui/material/IconButton';import ChevronLeftIcon from'@mui/icons-material/ChevronLeft';import classes from'../Login.module.css';import Button from'@mui/material/Button';import TextField from'@mui/material/TextField';import Typography from'@mui/material/Typography';import Container from'@mui/material/Container';import InputAdornment from'@mui/material/InputAdornment';// import DatePicker from '../DatePicker';\nimport AdapterDateFns from'@mui/lab/AdapterDateFns';import LocalizationProvider from'@mui/lab/LocalizationProvider';import DatePicker from'@mui/lab/DatePicker';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TaskForm=function TaskForm(props){var navigate=useNavigate();var goBackHandler=function goBackHandler(){navigate(\"/Account\");};var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];return/*#__PURE__*/_jsx(Container,{align:\"center\",children:/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{maxWidth:500,maxHeight:8000,borderRadius:5,borderColor:'primary.main',paddingTop:1,m:1},margin:\"10px\",children:[/*#__PURE__*/_jsx(CardActions,{children:/*#__PURE__*/_jsx(IconButton,{sx:{marginLeft:1},onClick:goBackHandler,children:/*#__PURE__*/_jsx(ChevronLeftIcon,{})})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",fontSize:\"26px\",className:classes.registration,children:\"Add Task\"}),/*#__PURE__*/_jsx(Box,{component:\"form\",sx:{marginTop:5,marginLeft:0,'& .MuiTextField-root':{m:1,width:'40ch',size:'small'}},noValidate:true,autoComplete:\"off\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TextField,{required:true,multiline:true,size:\"medium\",id:\"username\",label:\"UserName\",placeholder:\"xyz_abc123\"}),/*#__PURE__*/_jsx(TextField,{multiline:true,size:\"medium\",id:\"roll-id-agency\",label:\"Roll\",defaultValue:\"Agency\"}),/*#__PURE__*/_jsx(TextField,{required:true,multiline:true,size:\"medium\",id:\"description-task\",label:\"Description\",placeholder:\"xyzbfhfkabc\"}),/*#__PURE__*/_jsx(TextField,{children:\"variant=\\\"outlined\\\" color=\\\"primary\\\" type=\\\"date\\\" label=\\\"Date\\\"\"}),/*#__PURE__*/_jsx(LocalizationProvider,{dateAdapter:AdapterDateFns,children:/*#__PURE__*/_jsx(DatePicker,{disableFuture:true,label:\"Date\",openTo:\"year\",views:['year','month','day'],value:value,onChange:function onChange(newValue){setValue(newValue);},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread({},params));}})}),/*#__PURE__*/_jsx(TextField,{labelId:\"demo-simple-select-label\",id:\"select-roll\",label:\"Roll\",InputProps:{type:\"select\"}}),/*#__PURE__*/_jsx(\"div\",{className:classes.button,children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:props.onClick,sx:{marginTop:0.5,marginRight:-34},children:\"Submit\"})})]})})]})]})});};export default TaskForm;","map":{"version":3,"sources":["/home/lcom/Music/DH90/Verna-Django-Backend-main/verna-house-app/src/Componants/Tasks/TaskForm.js"],"names":["React","Box","Card","CardActions","CardContent","useNavigate","IconButton","ChevronLeftIcon","classes","Button","TextField","Typography","Container","InputAdornment","AdapterDateFns","LocalizationProvider","DatePicker","TaskForm","props","navigate","goBackHandler","useState","value","setValue","maxWidth","maxHeight","borderRadius","borderColor","paddingTop","m","marginLeft","registration","marginTop","width","size","newValue","params","type","button","onClick","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useNavigate } from \"react-router-dom\";\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport classes from '../Login.module.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport InputAdornment from '@mui/material/InputAdornment';\n// import DatePicker from '../DatePicker';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nconst TaskForm = props => {\n    const navigate = useNavigate()\n\n    const goBackHandler = () => {\n        navigate(\"/Account\")\n    }\n    const [value, setValue] = React.useState(null);\n    return (\n        <Container align=\"center\">\n            <Card variant=\"outlined\" sx={{ maxWidth: 500, maxHeight: 8000, borderRadius: 5, borderColor: 'primary.main', paddingTop: 1, m: 1 }} margin=\"10px\">\n                <CardActions>\n                    <IconButton sx={{ marginLeft: 1, }} onClick={goBackHandler}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </CardActions>\n                <CardContent>\n                    <Typography variant=\"h4\" component='div' fontSize='26px' className={classes.registration}>Add Task</Typography>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            marginTop: 5,\n                            marginLeft: 0,\n                            '& .MuiTextField-root': { m: 1, width: '40ch', size: 'small' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"  >\n                        <div>\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"username\"\n                                label=\"UserName\"\n                                placeholder=\"xyz_abc123\"\n                            />\n                            <TextField\n                                multiline\n                                size='medium'\n                                id=\"roll-id-agency\"\n                                label=\"Roll\"\n                                defaultValue=\"Agency\"\n                            />\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"description-task\"\n                                label=\"Description\"\n                                placeholder=\"xyzbfhfkabc\"\n                            />\n                            {/* <TextField\n                                InputProps={{\n                                    endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                                <DatePicker\n                                                    disableFuture\n                                                    label=\"Date\"\n                                                    openTo=\"year\"\n                                                    views={['year', 'month', 'day']}\n                                                    value={value}\n                                                    onChange={\n                                                        (newValue) => { setValue(newValue); }\n                                                    }\n                                                    renderInput={(params) => <TextField {...params} />}\n                                                />\n                                            </LocalizationProvider>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                                variant=\"outlined\">\n                            </TextField> */}\n                            <TextField>\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                type=\"date\"\n                                label=\"Date\"\n                            </TextField>\n                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                <DatePicker\n                                    disableFuture\n                                    label=\"Date\"\n                                    openTo=\"year\"\n                                    views={['year', 'month', 'day']}\n                                    value={value}\n                                    onChange={\n                                        (newValue) => { setValue(newValue); }\n                                    }\n                                    renderInput={(params) => <TextField {...params} />}\n                                />\n                            </LocalizationProvider>\n                            <TextField\n                                labelId=\"demo-simple-select-label\"\n                                id=\"select-roll\"\n                                label=\"Roll\"\n                                InputProps={{\n                                    type:\"select\"\n                                }}>\n                                \n                                \n                            </TextField>\n                            <div className={classes.button}>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={props.onClick}\n                                    sx={{\n                                        marginTop: 0.5,\n                                        marginRight: -34,\n                                    }}>\n                                    Submit</Button>\n                            </div>\n                        </div>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n\n};\nexport default TaskForm;"]},"metadata":{},"sourceType":"module"}