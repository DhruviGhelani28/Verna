{"ast":null,"code":"var _jsxFileName = \"/home/lcom/Music/DH90/verna-house-app/src/Componants/Login/Registration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useNavigate } from \"react-router-dom\";\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport classes from './Login.module.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registration = props => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const goBackHandler = () => {\n    navigate(\"/Login\");\n  }; // let { registration } = useParams();\n\n\n  const [values, setValues] = React.useState({\n    // amount: '',\n    password: '',\n    // weight: '',\n    // weightRange: '',\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        maxWidth: 500,\n        maxHeight: 8000,\n        borderRadius: 5,\n        borderColor: 'primary.main',\n        paddingTop: 1,\n        m: 1\n      },\n      margin: \"10px\",\n      children: [/*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          sx: {\n            marginLeft: 1\n          },\n          onClick: goBackHandler,\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"div\",\n          fontSize: \"26px\",\n          className: classes.registration,\n          children: \"Register Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            marginTop: 5,\n            marginLeft: 0,\n            '& .MuiTextField-root': {\n              m: 1,\n              width: '40ch'\n            } // '& .MuiButton-root': { marginRight:10 },\n\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              multiline: true,\n              size: \"medium\",\n              id: \"first-name\",\n              label: \"Enter Your Name\",\n              placeholder: \"xyz abc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              multiline: true,\n              size: \"medium\",\n              id: \"email-id\",\n              label: \"Enter Your Email Address\",\n              placeholder: \"xyz@abc.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              multiline: true,\n              size: \"medium\",\n              id: \"username\",\n              label: \"Enter Your UserName\",\n              placeholder: \"xyz_abc123\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              sx: {\n                m: 1,\n                width: '40ch'\n              },\n              variant: \"outlined\",\n              autoComplete: \"current-password\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"Enter New Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Enter New Password\",\n                placeholder: \"*******\",\n                id: \"new-password\",\n                type: values.showPassword ? 'text' : 'password',\n                value: values.password,\n                onChange: handleChange('password'),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 72\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 92\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              sx: {\n                m: 1,\n                width: '40ch'\n              },\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"outlined-adornment-password\",\n                children: \"Enter Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Enter Confirm Password\",\n                placeholder: \"*******\",\n                id: \"confirm-password\",\n                type: values.showPassword ? 'text' : 'password',\n                value: values.password,\n                onChange: handleChange('password'),\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"toggle password visibility\",\n                    onClick: handleClickShowPassword,\n                    onMouseDown: handleMouseDownPassword,\n                    edge: \"end\",\n                    children: values.showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 72\n                    }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 92\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.button,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: props.onClick,\n                sx: {\n                  marginTop: 0.5,\n                  marginRight: -34.5\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Registration, \"n3ZlMq19ZH75PIKcfQfUmrqW8k0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/lcom/Music/DH90/verna-house-app/src/Componants/Login/Registration.js"],"names":["React","Box","Card","CardActions","CardContent","useNavigate","IconButton","ChevronLeftIcon","classes","Button","TextField","Typography","Container","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","Registration","props","navigate","goBackHandler","values","setValues","useState","password","showPassword","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault","maxWidth","maxHeight","borderRadius","borderColor","paddingTop","m","marginLeft","registration","marginTop","width","button","onClick","marginRight"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { useNavigate } from \"react-router-dom\";\nimport IconButton from '@mui/material/IconButton';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport classes from './Login.module.css';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nconst Registration = props => {\n    const navigate = useNavigate()\n\n    const goBackHandler = () => {\n        navigate(\"/Login\")\n    }\n    // let { registration } = useParams();\n\n    const [values, setValues] = React.useState({\n        // amount: '',\n        password: '',\n        // weight: '',\n        // weightRange: '',\n        showPassword: false,\n    });\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({\n            ...values,\n            showPassword: !values.showPassword,\n        });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Box textAlign='center'>\n            <Card variant=\"outlined\" sx={{ maxWidth: 500, maxHeight: 8000, borderRadius: 5, borderColor: 'primary.main', paddingTop: 1, m: 1 }} margin=\"10px\">\n                <CardActions>\n                    <IconButton sx={{ marginLeft: 1, }} onClick={goBackHandler}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </CardActions>\n                <CardContent>\n                    <Typography variant=\"h4\" component='div' fontSize='26px' className={classes.registration}>Register Here</Typography>\n                    <Box\n                        component=\"form\"\n                        sx={{\n                            marginTop: 5,\n                            marginLeft: 0,\n                            '& .MuiTextField-root': { m: 1, width: '40ch' },\n                            // '& .MuiButton-root': { marginRight:10 },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                    >\n                        <div>\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"first-name\"\n                                label=\"Enter Your Name\"\n                                placeholder=\"xyz abc\"\n                            />\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"email-id\"\n                                label=\"Enter Your Email Address\"\n                                placeholder=\"xyz@abc.com\"\n                            />\n                            <TextField\n                                required\n                                multiline\n                                size='medium'\n                                id=\"username\"\n                                label=\"Enter Your UserName\"\n                                placeholder=\"xyz_abc123\"\n                            />\n                            <FormControl required sx={{ m: 1, width: '40ch' }} variant=\"outlined\" autoComplete=\"current-password\">\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Enter New Password</InputLabel>\n                                <OutlinedInput\n                                    label=\"Enter New Password\"\n                                    placeholder='*******'\n                                    id=\"new-password\"\n                                    type={values.showPassword ? 'text' : 'password'}\n                                    value={values.password}\n                                    onChange={handleChange('password')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n\n                                />\n                            </FormControl>\n                            <FormControl required sx={{ m: 1, width: '40ch' }} variant=\"outlined\" >\n                                <InputLabel htmlFor=\"outlined-adornment-password\">Enter Confirm Password</InputLabel>\n                                <OutlinedInput\n                                    \n                                    label=\"Enter Confirm Password\"\n                                    placeholder='*******'\n                                    id=\"confirm-password\"\n                                    type={values.showPassword ? 'text' : 'password'}\n                                    value={values.password}\n                                    onChange={handleChange('password')}\n                                    endAdornment={\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                                aria-label=\"toggle password visibility\"\n                                                onClick={handleClickShowPassword}\n                                                onMouseDown={handleMouseDownPassword}\n                                                edge=\"end\"\n                                            >\n                                                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                    }\n                                    \n                                />\n                            </FormControl>\n                            <div className={classes.button}>\n                                <Button\n                                    variant=\"contained\"\n                                    onClick={props.onClick}\n                                    sx={{\n                                        marginTop: 0.5,\n                                        marginRight: -34.5,\n\n                                    }}>\n                                    Submit</Button>\n                            </div>\n                        </div>\n                    </Box>\n                </CardContent>\n            </Card>\n        </Box>\n    );\n\n};\nexport default Registration;"]},"metadata":{},"sourceType":"module"}